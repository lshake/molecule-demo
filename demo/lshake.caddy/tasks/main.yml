---
# tasks file for lshake.caddy

- name: Create user group
  group:
    name: "{{ caddy_group }}"
    state: present

- name: Create user
  user:
    name: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    shell: /sbin/nologin
    home: "{{ caddy_home }}"
    password: '*'

- name: Create docroot
  file:
    state: directory
    path: "{{ caddy_docroot }}"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: 0775

- name: Create install dir
  file:
    state: directory
    path: "{{ caddy_install_path }}"
    owner: "root"
    group: "root"
    mode: 0755

- name: Download caddy archive
  get_url:
    dest: "{{ caddy_home }}/caddy.tgz"
    url: "{{ caddy_download_url }}"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: 0644
    timeout: 30
  register: download_caddy
  retries: 5
  until: download_caddy is succeeded

- name: Unarchive caddy
  unarchive:
    src: "{{ caddy_home }}/caddy.tgz"
    dest: "{{ caddy_install_path }}"
    remote_src: true
    owner: "root"
    group: "root"
  notify:
    - restart caddy

- name: Create config dirs
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: 0755
  with_items:
    - "{{ caddy_config_path }}"
    - "{{ caddy_ssl_path }}"
    - "{{ caddy_log_path }}"

- name: Install caddyfile
  template:
    src: caddyfile.j2
    dest: "{{ caddy_config_path }}/{{ caddy_config_file}}"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
  notify:
    - restart caddy

- name: Install test page
  template:
    src: index.html.j2
    dest: "{{ caddy_docroot }}/.static_test.html"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"

- name: Install caddy service
  template:
    src: "caddy.service.systemd.j2"
    dest: "/lib/systemd/system/caddy.service"
  notify:
    - systemd daemon reload
    - restart caddy

- name: Flush handlers
  meta: flush_handlers

- name: Test caddy
  uri:
    url: "http://{{ ansible_fqdn }}:{{ caddy_port}}/.static_test.html"
    return_content: true
  register: caddy_test
  failed_when: "'Caddy Test Page' not in caddy_test.content"
